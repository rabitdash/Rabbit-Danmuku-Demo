package com.rabyte.rabitdash.UI;

import com.rabyte.rabitdash.util.Constants;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class MainMenu {
    private static JFrame frame;
    private static JFrame jf;
    private static GamePanel gamePanel;
    private JPanel panel1;
    private JPanel bakPanel;
    private JButton startButton;
    private JButton exitButton;
    private JPanel panelBak;

    public MainMenu() {
        $$$setupUI$$$();
        exitButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                System.exit(0);
            }
        });
        startButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                frame.setVisible(false);
                jf.setVisible(true);
                gamePanel.setVisible(true);
                gamePanel.start();
                gamePanel.requestFocus();
            }
        });


    }

    public static void main(String[] args) {
        frame = new JFrame("MainMenu");
//        frame.setContentPane(new GamePanel());
        frame.setContentPane(new MainMenu().panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //´°¿Ú¾ÓÖÐ
        frame.setBounds(
                (int) (Toolkit.getDefaultToolkit()
                        .getScreenSize()
                        .getWidth()
                        - Constants.WINDOW_WIDTH) / 2,
                (int) (Toolkit.getDefaultToolkit()
                        .getScreenSize()
                        .getHeight()
                        - Constants.WINDOW_HEIGHT) / 2,
                Constants.WINDOW_WIDTH,
                Constants.WINDOW_HEIGHT);
//        frame.add(new BakPanel());
        frame.setVisible(true);
        jf = new JFrame("Gaming");
        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        gamePanel = new GamePanel();
        jf.setContentPane(gamePanel);
        jf.setBounds(
                (int) (Toolkit.getDefaultToolkit().getScreenSize().getWidth() - Constants.WINDOW_WIDTH) / 2,
                (int) (Toolkit.getDefaultToolkit().getScreenSize().getHeight() - Constants.WINDOW_HEIGHT) / 2,
                Constants.WINDOW_WIDTH,
                Constants.WINDOW_HEIGHT);
//        gamePanel.setVisible(true);
//        jf.setVisible(true);
        jf.addComponentListener(new ComponentListener() {
            @Override
            public void componentResized(ComponentEvent e) {

            }

            @Override
            public void componentMoved(ComponentEvent e) {

            }

            @Override
            public void componentShown(ComponentEvent e) {

            }

            @Override
            public void componentHidden(ComponentEvent e) {
            }
        });


    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new CardLayout(0, 0));
        panel1.setBackground(new Color(-1507841));
        panel1.setOpaque(false);
        panel1.setVisible(true);
        bakPanel.setLayout(new BorderLayout(0, 0));
        bakPanel.setEnabled(false);
        bakPanel.setVisible(true);
        panel1.add(bakPanel, "Card1");
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel2.setOpaque(false);
        bakPanel.add(panel2, BorderLayout.CENTER);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        panel3.setOpaque(false);
        panel2.add(panel3, BorderLayout.SOUTH);
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel3.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel3.add(spacer2, gbc);
        exitButton = new JButton();
        exitButton.setText("Exit");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        panel3.add(exitButton, gbc);
        startButton = new JButton();
        startButton.setText("Start");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        panel3.add(startButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        bakPanel = new BakPanel();
    }
}
